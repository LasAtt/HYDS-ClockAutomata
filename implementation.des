INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI
    from AsyncUpdater import AsyncUpdater

    root = Tk()
    root.title("Product of Texas")
    g = DWatchGUI(root, eventhandler)

    def clock():
        g.increaseTimeByOne()
        if g.checkTime():
            g.alarmStart()

    t = AsyncUpdater(clock, g.refreshTimeDisplay, 1)
    c = AsyncUpdater(g.increaseChronoByOne, g.refreshChronoDisplay, 0.25)

    eventhandler.start()
    root.mainloop()

STATECHART:
    N [DS]
      W [DS]
      R
    A
      Y [DS]
      N
    L
      O [DS]
      T
    C
      P [DS]
      R
    AH
    TH
    E
      D [DS]
      LH
      RH
      I

TRANSITION:
    S: N.W
    N: N.R
    T: 0
    O: t.start()
       t.show()

TRANSITION:
    S: N
    N: L
    E: lightOn
    O: g.setIndiglo()

#Alarming stuff

TRANSITION:
    S: N
    N: A.Y
    E: alarming
    O: g.setIndiglo()

TRANSITION:
    S: A.Y
    N: A.N
    T: 0.25
    O: g.unsetIndiglo()

TRANSITION:
    S: A.N
    N: A.Y
    T: 0.25
    O: g.setIndiglo()

TRANSITION:
    S: A
    N: N
    T: 4.5
    O: g.unsetIndiglo(); g.refreshTimeDisplay()

TRANSITION:
    S: A
    N: N
    E: lightOn
    O: g.unsetIndiglo(); g.refreshTimeDisplay()

TRANSITION:
    S: A
    N: N
    E: changeMode
    O: g.unsetIndiglo(); g.refreshTimeDisplay()

TRANSITION:
    S: A
    N: N
    E: initChrono
    O: g.unsetIndiglo(); g.refreshTimeDisplay()

TRANSITION:
    S: A
    N: N
    E: resetChrono
    O: g.unsetIndiglo(); g.refreshTimeDisplay()

TRANSITION:
    S: L.O
    N: L.T
    E: lightOff
    O: print "light turning off"

TRANSITION:
    S: L.T
    N: N
    T: 2
    O: g.unsetIndiglo()

#Chrono mode (still need to increase chrono 100 times per second)

TRANSITION:
    S: N
    N: C
    E: changeMode
    O: t.hide()
       c.show()
       g.refreshChronoDisplay()

TRANSITION:
    S: C
    N: N
    E: changeMode
    O: c.hide()
       t.show()
       g.refreshTimeDisplay()

TRANSITION:
    S: C.P
    N: C.R
    E: initChrono
    O: c.start()

TRANSITION:
    S: C.R
    N: C.P
    E: initChrono
    O: c.stop()

TRANSITION:
    S: C
    N: C
    E: resetChrono
    O: g.resetChrono()
       c.start()

#Edit alarm

TRANSITION:
    S: N
    N: AH
    E: setAlarm
    O: t.hide()
       g.refreshAlarmDisplay()

TRANSITION:
    S: AH
    N: E.D
    T: 1.5
    O: g.startSelection()

TRANSITION:
    S: AH
    N: N
    E: onoff
    O: g.setAlarm(); t.show()

#Edit time

TRANSITION:
    S: N
    N: TH
    E: editTime
    O: print "button pressed"

TRANSITION:
    S: TH
    N: N
    E: released
    O: print "button released"

TRANSITION:
    S: TH
    N: E
    T: 1.5
    O: g.startSelection(); t.stop()

#Shared selection edit

TRANSITION:
    S: E.D
    N: N
    T: 5
    O: g.stopSelection()

TRANSITION:
    S: E.D
    N: E.LH
    E: increase
    O: print "increase pressed"

TRANSITION:
    S: E.LH
    N: E.D
    E: stopInc
    O: g.increaseSelection()

TRANSITION:
    S: E.LH
    N: E.I
    T: 0.3
    O: g.increaseSelection()

TRANSITION:
    S: E.I
    N: E.I
    T: 0.3
    O: g.increaseSelection()

TRANSITION:
    S: E.I
    N: E.D
    E: stopInc
    O: print "increase stopped"

TRANSITION:
    S: E.D
    N: E.RH
    E: finishEdit
    O: print "edit finished"

TRANSITION:
    S: E.RH
    N: N
    T: 2
    O: g.stopSelection()

TRANSITION:
    S: E.RH
    N: E.D
    E: released
    O: g.selectNext()
